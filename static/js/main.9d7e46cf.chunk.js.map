{"version":3,"sources":["SeasonDisplay.js","Spinner.js","index.js"],"names":["seasonConfig","winter","text","iconName","summer","SeasonDisplay","props","lat","month","season","Date","getMonth","_seasonConfig$season","react_default","a","createElement","className","concat","Spinner","message","defaultProps","App","state","errMessage","renderContent","_this","src_SeasonDisplay_0","src_Spinner","_this2","this","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","React","Component","ReactDOM","render","src_App","document","querySelector"],"mappings":"4LAGMA,SAAe,CACnBC,OAAW,CACTC,KAAO,2BACPC,SAAW,aAEbC,OAAW,CACTF,KAAO,uBACPC,SAAW,SAsBAE,EAZO,SAAAC,GACpB,IARiBC,EAAKC,EAQhBC,GARWF,EAQQD,EAAMC,KARTC,GAQc,IAAIE,MAAOC,YAPnC,GAAKH,EAAQ,EAChBD,EAAM,EAAI,SAAW,SAErBA,EAAM,EAAI,SAAW,UAGDK,EAEJZ,EAAaS,GAA/BP,EAFsBU,EAEtBV,KAAMC,EAFgBS,EAEhBT,SACb,OACIU,EAAAC,EAAAC,cAAA,OAAKC,UAAS,kBAAAC,OAAoBR,IAChCI,EAAAC,EAAAC,cAAA,KAAGC,UAAS,aAAAC,OAAed,EAAf,mBACZU,EAAAC,EAAAC,cAAA,UAAKb,GACLW,EAAAC,EAAAC,cAAA,KAAGC,UAAS,cAAAC,OAAgBd,EAAhB,qBCzBde,EAAU,SAAAZ,GACd,OACEO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAsBV,EAAMa,WAKjDD,EAAQE,aAAe,CACrBD,QAAU,cAGGD,QCTTG,6MACJC,MAAQ,CAAEf,IAAM,KAAMgB,WAAa,MASnCC,cAAgB,WACd,OAAGC,EAAKH,MAAMC,aAAeE,EAAKH,MAAMf,IAC/BM,EAAAC,EAAAC,cAAA,qBAAaU,EAAKH,MAAMC,aAG5BE,EAAKH,MAAMC,YAAcE,EAAKH,MAAMf,IAChCM,EAAAC,EAAAC,cAACW,EAAD,CAAenB,IAAKkB,EAAKH,MAAMf,MAGnCkB,EAAKH,MAAMC,YAAeE,EAAKH,MAAMf,SAA1C,EACSM,EAAAC,EAAAC,cAACY,EAAD,CAASR,QAAQ,uHAjBT,IAAAS,EAAAC,KACjBC,OAAOC,UAAUC,YAAYC,mBAC3B,SAAAC,GAAQ,OAAIN,EAAKO,SAAS,CAAE5B,IAAM2B,EAASE,OAAOC,YAClD,SAAAC,GAAG,OAAIV,EAAKO,SAAS,CAAEZ,WAAae,EAAInB,6CAmB1C,OACEN,EAAAC,EAAAC,cAAA,WACGc,KAAKL,wBA3BIe,IAAMC,WAkCxBC,IAASC,OAAO7B,EAAAC,EAAAC,cAAC4B,EAAD,MAASC,SAASC,cAAc","file":"static/js/main.9d7e46cf.chunk.js","sourcesContent":["import React from 'react';\r\nimport './SeasonDisplay.css';\r\n\r\nconst seasonConfig = {\r\n  'winter' : {\r\n    text : \"It's Chilly. Use Sweater\",\r\n    iconName : 'snowflake'\r\n  },\r\n  'summer' : {\r\n    text : \"Let's hit the beach!\",\r\n    iconName : 'sun'\r\n  }\r\n}\r\nconst getSeason = (lat, month) => {\r\n  if (month > 2 && month < 9) {\r\n    return lat > 0 ? \"summer\" : \"winter\";\r\n  }else{\r\n    return lat > 0 ? \"winter\" : \"summer\";\r\n  }\r\n}\r\nconst SeasonDisplay = props => {\r\n  const season = getSeason(props.lat, new Date().getMonth());\r\n  const {text, iconName} = seasonConfig[season];\r\n  return(\r\n      <div className={`season-display ${season}`}>\r\n        <i className={`icon-left ${iconName} massive icon`}></i>\r\n        <h1>{text}</h1>\r\n        <i className={`icon-right ${iconName} massive icon`}></i>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default SeasonDisplay;\r\n","import React from 'react';\r\n\r\nconst Spinner = props => {\r\n  return(\r\n    <div className=\"ui active dimmer\">\r\n      <div className=\"ui big text loader\">{props.message}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSpinner.defaultProps = {\r\n  message : 'Loading...'\r\n}\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport SeasonDisplay from './SeasonDisplay';\r\nimport Spinner from './Spinner';\r\n\r\nclass App extends React.Component{\r\n  state = { lat : null, errMessage : '' };\r\n\r\n  componentDidMount(){\r\n    window.navigator.geolocation.getCurrentPosition(\r\n      position => this.setState({ lat : position.coords.latitude }),\r\n      err => this.setState({ errMessage : err.message })\r\n    );\r\n  }\r\n\r\n  renderContent = () => {\r\n    if(this.state.errMessage && !this.state.lat){\r\n      return(<div>Error: {this.state.errMessage}</div>);\r\n    }\r\n\r\n    if (!this.state.errMessage && this.state.lat) {\r\n      return <SeasonDisplay lat={this.state.lat}/>;\r\n    }\r\n\r\n    if (!this.state.errMessage && !this.state.lat) {\r\n      return <Spinner message=\"Please accept location request\"/>;\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n        {this.renderContent()}\r\n      </div>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}